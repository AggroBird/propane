/*
Advanced example on how to potentially implement virtual tables
in Propane.
*/

// Vtable
struct VTable
	void(BaseClass*) method
end

// Base class
struct BaseClass
	VTable* vt
	int a
end

// Base func
method BaseFunc parameters
		BaseClass* bc
	end
	
	dump *bc
end

// Child class
struct ChildClass
	BaseClass base
	int b
end

// Child func
method ChildFunc parameters
		BaseClass* bc
	end
	
	stack
		ChildClass* cc
	end
	
	conv cc bc
	dump *cc
end

// Vtable constants
constant
	VTable BaseClassVTable BaseFunc
	VTable ChildClassVTable ChildFunc
end



method main returns int
	stack
		0: BaseClass
		1: ChildClass
	
		10: BaseClass*
		11: VTable*
	end
	
	// Initialize base object
	set {0}.BaseClass:vt &BaseClassVTable
	set {0}.BaseClass:a 1
	
	// Initialize child object
	set {1}.ChildClass:base.vt &ChildClassVTable
	set {1}.ChildClass:base.a 1
	set {1}.ChildClass:b 2
	
	// Call base
	set {10} &{0}
	set {11} {10}->BaseClass:vt
	callv {11}->VTable:method {10}
	// Call child
	conv {10} &{1}
	set {11} {10}->BaseClass:vt
	callv {11}->VTable:method {10}
	
	retv 0
end